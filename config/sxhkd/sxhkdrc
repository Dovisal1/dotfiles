#
# wm independent hotkeys
#

# terminal emulator
super + Return
	$TERMINAL

# program launcher
super + @space
	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# incognito
super + shift + Delete
	amixer -q -D pulse sset Master mute;	\
	playerctl -a pause;			\
	bspc desktop -f lol ||			\
		bspc monitor -a lol &&		\
		bspc desktop -f lol;		\
	spawn $TERMINAL -e htop;		\
	spawn $TERMINAL -e "vim /etc/passwd"

#
# Programs
#

super + b
	patoggle

super + g
	$BROWSER

super + i
	$TERMINAL -e htop

super + n
	thunar

super + shift + n
	nextcloud

super + m
	$TERMINAL -e neomutt

super + shift + m
	eval $SPOTIFY

super + p
	vpn

#
# Function Keys
#

super + F1
	killall redshift || redshift

super + F2
	killall xss-lock || locker

#
# Playback Control
#

XF86Audio{Raise,Lower}Volume
	amixer -q -D pulse sset Master 5%{+,-}
XF86AudioMute
	amixer -q -D pulse sset Master toggle #mute/unmute
XF86AudioPlay
	playerctlstate play-pause
XF86Audio{Next,Prev}
	playerctlstate {next,previous}

XF86MonBrightness{Up,Down}
	brightness {+,-}5

#
# Locking/Power
#

super + shift + @x
	loginctl lock-session
super + shift + @s
	sleep 0.5 && systemctl suspend
super + shift + @BackSpace
	case "$(printf "Cancel\nSleep\nReboot\nPoweroff\nHibernate" |	\
		dmenu -i -p "Power Menu")" in				\
	Sleep) sleep 0.5 && systemctl suspend;;				\
	Reboot) reboot;;						\
	Poweroff) poweroff;;						\
	Hibernate) systemctl hibernate;;				\
	esac

# Screenshots

@Print
	maim -u ~/Pictures/Screenshots/$(date +'%F_%T').png
shift + @Print
	maim -i $(xdotool getactivewindow) -u ~/Pictures/Screenshots/$(date +'%F_%T').png
super + shift + @Print
	maim -s -u ~/Pictures/Screenshots/$(date +'%F_%T').png

#
# bspwm hotkeys
#

super + shift + Escape
	dmenu_prompt "Leave bspwm?" "pkill -x panel; bspc quit"

super + shift + q
	bspc node -c

super + shift + space
	bspc node -t '~floating'

# alternate between the tiled and monocle layout
super + w
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node -g marked && \
	bspc node newest.marked.local -n newest.!automatic.local

super + u
	bspc node $(bspc query -N -n .hidden) -g hidden -f



#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
#super + {p,b,comma,period}
#	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
# super + {o,i}
# 	bspc wm -h off; \
# 	bspc node {older,newer} -f; \
# 	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


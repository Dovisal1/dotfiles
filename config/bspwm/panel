#!/bin/sh

. ./profile
if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

clock () {
    while :; do
		date +"S %a, %b %-d at %I:%M %p"
		t=$((60 - $(date '+%S')))
		[ "$t" -lt 0 ] || sleep "$t.5"
    done
}

brightnessmon() {
    dir="/sys/class/backlight/intel_backlight/"
    [ -d "$dir" ] || return
    max="$(cat "$dir/max_brightness")"
    while true; do
	cur="$(cat "$dir/brightness")"
	b="$((100*cur/max))"
	echo "B${b}"
	inotifywait "$dir/brightness" >/dev/null 2>&1
    done
}

media() {
    # playerctl -p playerctld metadata -f '{{status}} {{artist}}{{defined(artist," - ")}}{{title}}' -F 2>/dev/null |
    playerctl -p playerctld metadata -f '{{status}} {{artist}} - {{title}}' -F 2>/dev/null |
    sed -u -e 's/Playing//' -e 's/Paused//' -e 's/Stopped//' |
    sed -u -e 's/^/P/'
}

volume() {
	pulsemon |
	stdbuf -oL uniq |
	while read card vol mute; do
		case "$card" in
		*JDS_Labs_Element*)
			z="";;
		*)
			z="";;
		esac
		echo "V$mute $vol $z"
	done |
	sed -u -e 's/unmuted//' -e 's/muted//'
}

iface() {
    case "$(hostname)" in
    tini) exc=",eno1";;
    esac
    exc="\"lo,docker,virbr,vboxnet,veth,br$exc\""
    {
	while true; do
	    echo event
	    sleep 3m
	done &
	ip -4 -o monitor link address
    } |
    while read event; do
	ip -j addr |
	jq --argjson exc "$exc" -r '
	    map(select(.ifname as $i |
		    $exc |
		    split(",") |
		    map(. as $pre |
			$i |
			startswith($pre)
		    ) |
		    any |
		    not
		)
	    ) | .[] |
	    "\(.ifname) \(.operstate |
		ascii_downcase) \(.addr_info |
		map(select(.family=="inet")) |
		map(.local) |
		join(", ")
	    )"
	' | {
	    l=0
	    printf "%s" "%{R}"
	    while read iface state addr; do
		case "$state" in
		up|down) ;;
		*) state=;;
		esac
		[ "$l" -eq 1 ] && printf " "
		printf "%s" "%{R}"
		[ "$l" -eq 2 ] && printf " "
		ssid=
		case "$iface" in
		w*)
		    ssid="$(iwgetid --raw $iface)"
		    i=;;
		e*)
		    i=;;
		tun*)
		    i=;;
		esac
		printf "%s" "$i $iface${state:+ $state}${addr:+ $addr}${ssid:+ $ssid}"
		case "$l" in
		0) l=1;; 1) l=2;; 2) l=1;;
		esac
	    done
	    printf "%s\n" "%{F-}%{B-}"
	} |
	sed -u -e 's/^/I/'
    done
}

battery() {
    dir='/sys/class/power_supply/BAT0'
    [ -d "$dir" ] || return
    {
	while true; do
	    echo event
	    sleep 2m
	done &
	while sleep 5; do
	    inotifywait "$dir/status" "$dir/capacity"
	    echo event
	done
    } |
    while read line; do
	status="$(cat "$dir/status")"
	capacity="$(cat "$dir/capacity")"
	icon=
	case "$status" in
	Discharging)
	    case "$capacity" in
	    0*)	    icon=;;
	    [0-9])  icon=;;
	    1[0-5]) icon=;;
	    1[6-9]) icon=;;
	    2[0-9]) icon=;;
	    3[0-9]) icon=;;
	    4[0-9]) icon=;;
	    5[0-9]) icon=;;
	    6[0-9]) icon=;;
	    7[0-9]) icon=;;
	    8[0-9]) icon=;;
	    9[0-9]) icon=;;
	    100)    icon=;;
	    esac;;
	Charging)
		    icon=;;
	Full)
		    icon=;;
	*)
		    icon=;;
	esac
	if [ "$capacity" -le 15 ]; then
	    icon="%{F#ff0000}$icon%{F-}"
	elif [ "$capacity" -le 25 ]; then
	    icon="%{F#ffff00}$icon%{F-}"
	fi
	echo "A${icon:+ $icon }${capacity}%"
    done
}

{
    case "$(hostname)" in
    tini) xtitle -sf 'T%s\n';;
    esac &

    clock &
    brightnessmon &
    bspc subscribe report &
    media &
    volume &
    iface &
    battery &
} > "$PANEL_FIFO" &

. ./panel_colors

./panel_bar < "$PANEL_FIFO" | lemonbar -a 32 -u 2 -n "$PANEL_WM_NAME" -g x$PANEL_HEIGHT -f "Ubuntu Mono:size=$PANEL_FONT_SZ" -f "Symbols Nerd Font:size=$PANEL_FONT_SZ" -f "JoyPixels:size=$((PANEL_FONT_SZ-2))" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &

trayer --edge top --align right --transparent true --SetDockType true --alpha 0 --widthtype request --height "$((PANEL_HEIGHT-4))" --tint "$(echo $COLOR_DEFAULT_BG | sed 's/#/0x/')" --expand true &

bspwm_root="$(xdo id -N Bspwm -n root | sort | head -n 1)"
trayid="$(xdo id -m -a panel)"
panelid="$(xdo id -m -a "$PANEL_WM_NAME")"
xdo above -t "$bspwm_root" "$trayid"
xdo above -t "$bspwm_root" "$panelid"

xdo id -m -a panel && xprop -name panel -f WM_SIZE_HINTS 32i ' $5\n' -spy WM_NORMAL_HINTS | sed -u -e 's/WM_NORMAL_HINTS(WM_SIZE_HINTS) /X/g' > "$PANEL_FIFO" &

bspwm_pid="$(pgrep bspwm)"
[ -n "bspwm_pid" ] && tail --pid="$bspwm_pid" -f /dev/null
